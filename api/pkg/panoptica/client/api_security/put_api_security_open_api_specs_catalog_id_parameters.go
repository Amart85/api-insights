// Code generated by go-swagger; DO NOT EDIT.

package api_security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutAPISecurityOpenAPISpecsCatalogIDParams creates a new PutAPISecurityOpenAPISpecsCatalogIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutAPISecurityOpenAPISpecsCatalogIDParams() *PutAPISecurityOpenAPISpecsCatalogIDParams {
	return &PutAPISecurityOpenAPISpecsCatalogIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithTimeout creates a new PutAPISecurityOpenAPISpecsCatalogIDParams object
// with the ability to set a timeout on a request.
func NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithTimeout(timeout time.Duration) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	return &PutAPISecurityOpenAPISpecsCatalogIDParams{
		timeout: timeout,
	}
}

// NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithContext creates a new PutAPISecurityOpenAPISpecsCatalogIDParams object
// with the ability to set a context for a request.
func NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithContext(ctx context.Context) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	return &PutAPISecurityOpenAPISpecsCatalogIDParams{
		Context: ctx,
	}
}

// NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithHTTPClient creates a new PutAPISecurityOpenAPISpecsCatalogIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutAPISecurityOpenAPISpecsCatalogIDParamsWithHTTPClient(client *http.Client) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	return &PutAPISecurityOpenAPISpecsCatalogIDParams{
		HTTPClient: client,
	}
}

/* PutAPISecurityOpenAPISpecsCatalogIDParams contains all the parameters to send to the API endpoint
   for the put API security open API specs catalog ID operation.

   Typically these are written to a http.Request.
*/
type PutAPISecurityOpenAPISpecsCatalogIDParams struct {

	// Body.
	Body string

	// CatalogID.
	//
	// Format: uuid
	CatalogID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put API security open API specs catalog ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithDefaults() *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put API security open API specs catalog ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithTimeout(timeout time.Duration) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithContext(ctx context.Context) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithHTTPClient(client *http.Client) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithBody(body string) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetBody(body string) {
	o.Body = body
}

// WithCatalogID adds the catalogID to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WithCatalogID(catalogID strfmt.UUID) *PutAPISecurityOpenAPISpecsCatalogIDParams {
	o.SetCatalogID(catalogID)
	return o
}

// SetCatalogID adds the catalogId to the put API security open API specs catalog ID params
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) SetCatalogID(catalogID strfmt.UUID) {
	o.CatalogID = catalogID
}

// WriteToRequest writes these params to a swagger request
func (o *PutAPISecurityOpenAPISpecsCatalogIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param catalogId
	if err := r.SetPathParam("catalogId", o.CatalogID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
