// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPolicyProfileCondition ApiPolicyProfileCondition
//
// swagger:model ApiPolicyProfileCondition
type APIPolicyProfileCondition struct {
	apiOrConditionsField []APIOrConditionsBase

	endpointOrConditionsField []EndpointOrConditionsBase

	providerOrConditionsField []ProviderOrConditionsBase
}

// APIOrConditions gets the api or conditions of this base type
func (m *APIPolicyProfileCondition) APIOrConditions() []APIOrConditionsBase {
	return m.apiOrConditionsField
}

// SetAPIOrConditions sets the api or conditions of this base type
func (m *APIPolicyProfileCondition) SetAPIOrConditions(val []APIOrConditionsBase) {
	m.apiOrConditionsField = val
}

// EndpointOrConditions gets the endpoint or conditions of this base type
func (m *APIPolicyProfileCondition) EndpointOrConditions() []EndpointOrConditionsBase {
	return m.endpointOrConditionsField
}

// SetEndpointOrConditions sets the endpoint or conditions of this base type
func (m *APIPolicyProfileCondition) SetEndpointOrConditions(val []EndpointOrConditionsBase) {
	m.endpointOrConditionsField = val
}

// ProviderOrConditions gets the provider or conditions of this base type
func (m *APIPolicyProfileCondition) ProviderOrConditions() []ProviderOrConditionsBase {
	return m.providerOrConditionsField
}

// SetProviderOrConditions sets the provider or conditions of this base type
func (m *APIPolicyProfileCondition) SetProviderOrConditions(val []ProviderOrConditionsBase) {
	m.providerOrConditionsField = val
}

// UnmarshalJSON unmarshals this object with a polymorphic type from a JSON structure
func (m *APIPolicyProfileCondition) UnmarshalJSON(raw []byte) error {
	var data struct {
		APIOrConditions json.RawMessage `json:"api_or_conditions"`

		EndpointOrConditions json.RawMessage `json:"endpoint_or_conditions"`

		ProviderOrConditions json.RawMessage `json:"provider_or_conditions"`
	}
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	var propAPIOrConditions []APIOrConditionsBase
	if string(data.APIOrConditions) != "null" {
		apiOrConditions, err := UnmarshalAPIOrConditionsBaseSlice(bytes.NewBuffer(data.APIOrConditions), runtime.JSONConsumer())
		if err != nil && err != io.EOF {
			return err
		}
		propAPIOrConditions = apiOrConditions
	}
	var propEndpointOrConditions []EndpointOrConditionsBase
	if string(data.EndpointOrConditions) != "null" {
		endpointOrConditions, err := UnmarshalEndpointOrConditionsBaseSlice(bytes.NewBuffer(data.EndpointOrConditions), runtime.JSONConsumer())
		if err != nil && err != io.EOF {
			return err
		}
		propEndpointOrConditions = endpointOrConditions
	}
	var propProviderOrConditions []ProviderOrConditionsBase
	if string(data.ProviderOrConditions) != "null" {
		providerOrConditions, err := UnmarshalProviderOrConditionsBaseSlice(bytes.NewBuffer(data.ProviderOrConditions), runtime.JSONConsumer())
		if err != nil && err != io.EOF {
			return err
		}
		propProviderOrConditions = providerOrConditions
	}

	var result APIPolicyProfileCondition

	// api_or_conditions
	result.apiOrConditionsField = propAPIOrConditions

	// endpoint_or_conditions
	result.endpointOrConditionsField = propEndpointOrConditions

	// provider_or_conditions
	result.providerOrConditionsField = propProviderOrConditions

	*m = result

	return nil
}

// MarshalJSON marshals this object with a polymorphic type to a JSON structure
func (m APIPolicyProfileCondition) MarshalJSON() ([]byte, error) {
	var b1, b2, b3 []byte
	var err error
	b1, err = json.Marshal(struct {
	}{})
	if err != nil {
		return nil, err
	}
	b2, err = json.Marshal(struct {
		APIOrConditions []APIOrConditionsBase `json:"api_or_conditions"`

		EndpointOrConditions []EndpointOrConditionsBase `json:"endpoint_or_conditions"`

		ProviderOrConditions []ProviderOrConditionsBase `json:"provider_or_conditions"`
	}{

		APIOrConditions: m.apiOrConditionsField,

		EndpointOrConditions: m.endpointOrConditionsField,

		ProviderOrConditions: m.providerOrConditionsField,
	})
	if err != nil {
		return nil, err
	}

	return swag.ConcatJSON(b1, b2, b3), nil
}

// Validate validates this Api policy profile condition
func (m *APIPolicyProfileCondition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAPIOrConditions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEndpointOrConditions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderOrConditions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPolicyProfileCondition) validateAPIOrConditions(formats strfmt.Registry) error {
	if swag.IsZero(m.APIOrConditions()) { // not required
		return nil
	}

	for i := 0; i < len(m.APIOrConditions()); i++ {

		if err := m.apiOrConditionsField[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("api_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("api_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *APIPolicyProfileCondition) validateEndpointOrConditions(formats strfmt.Registry) error {
	if swag.IsZero(m.EndpointOrConditions()) { // not required
		return nil
	}

	for i := 0; i < len(m.EndpointOrConditions()); i++ {

		if err := m.endpointOrConditionsField[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("endpoint_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("endpoint_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *APIPolicyProfileCondition) validateProviderOrConditions(formats strfmt.Registry) error {
	if swag.IsZero(m.ProviderOrConditions()) { // not required
		return nil
	}

	for i := 0; i < len(m.ProviderOrConditions()); i++ {

		if err := m.providerOrConditionsField[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("provider_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("provider_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// ContextValidate validate this Api policy profile condition based on the context it is used
func (m *APIPolicyProfileCondition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAPIOrConditions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateEndpointOrConditions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateProviderOrConditions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPolicyProfileCondition) contextValidateAPIOrConditions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.APIOrConditions()); i++ {

		if err := m.apiOrConditionsField[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("api_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("api_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *APIPolicyProfileCondition) contextValidateEndpointOrConditions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.EndpointOrConditions()); i++ {

		if err := m.endpointOrConditionsField[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("endpoint_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("endpoint_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *APIPolicyProfileCondition) contextValidateProviderOrConditions(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.ProviderOrConditions()); i++ {

		if err := m.providerOrConditionsField[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("provider_or_conditions" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("provider_or_conditions" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIPolicyProfileCondition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPolicyProfileCondition) UnmarshalBinary(b []byte) error {
	var res APIPolicyProfileCondition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
