{
  "id": "325304f2-f5ed-11ec-b4f1-8ed9756f6a98",
  "new_spec_id": "9f6a6887-e6d0-11ec-a7e8-76b085828d3a",
  "old_spec_id": "81a45c6c-e6d0-11ec-a7b4-76b085828d3a",
  "result": {
    "json": {
      "added": [
        {
          "path": "/tag",
          "method": "GET",
          "description": "",
          "message": "/tag - Added"
        }
      ],
      "deleted": [
        {
          "path": "/tags",
          "method": "GET",
          "description": "",
          "message": "/tags - Deleted"
        }
      ],
      "deprecated": [
        {
          "path": "/catalogue/size",
          "method": "GET",
          "description": "",
          "message": "/catalogue/size - Deprecated"
        }
      ],
      "modified": [
        {
          "old": {
            "description": "Catalogue API",
            "operationId": "List catalogue",
            "produces": [
              "application/json;charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "",
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Listresponse"
                  }
                }
              }
            }
          },
          "new": {
            "description": "Catalogue API",
            "operationId": "List-catalogue",
            "parameters": [
              {
                "description": "query",
                "format": "double",
                "in": "query",
                "maximum": 255,
                "minimum": 1,
                "name": "max",
                "type": "number"
              },
              {
                "description": "query",
                "format": "double",
                "in": "query",
                "maximum": 255,
                "minimum": 1,
                "name": "offset",
                "type": "number"
              },
              {
                "description": "query",
                "in": "query",
                "maxLength": 255,
                "minLength": 1,
                "name": "sort",
                "pattern": ".*",
                "type": "string"
              },
              {
                "description": "query",
                "in": "query",
                "maxLength": 255,
                "minLength": 1,
                "name": "order",
                "pattern": "[^/]*",
                "type": "string"
              }
            ],
            "produces": [
              "application/json;charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "OK",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "Link": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "type": "object",
                  "example": {
                    "item": [
                      {
                        "id": "id",
                        "tag": [
                          "tag1"
                        ],
                        "name": "name1",
                        "count": 2,
                        "price": 10,
                        "imageUrl": [
                          "https://abc.com/1.png"
                        ],
                        "description": "desc"
                      }
                    ]
                  },
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Listresponse"
                      },
                      "maxItems": 100,
                      "minItems": 0
                    }
                  }
                }
              },
              "400": {
                "description": "Bad Request",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "401": {
                "description": "Unauthorized",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "403": {
                "description": "Forbidden",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "404": {
                "description": "Not Found",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "429": {
                "description": "Too Many Requests",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Internal Server Error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            },
            "security": [
              {
                "BearerAuth": []
              }
            ],
            "tags": [
              "Sample"
            ]
          },
          "path": "/catalogue",
          "method": "GET",
          "summary": "",
          "description": "Catalogue API",
          "breaking": true,
          "message": "###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n###### Response:\n\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Modified content type: `application/json;charset=UTF-8`\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n",
          "parameters": {
            "breaking": false,
            "message": "###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n",
            "details": [
              {
                "name": "max",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `max` in `query`\n\u003e query\n\n"
              },
              {
                "name": "offset",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `offset` in `query`\n\u003e query\n\n"
              },
              {
                "name": "sort",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `sort` in `query`\n\u003e query\n\n"
              },
              {
                "name": "order",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `order` in `query`\n\u003e query\n\n"
              }
            ]
          },
          "requestBody": null,
          "responses": {
            "breaking": true,
            "message": "###### Response:\n\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Modified content type: `application/json;charset=UTF-8`\n",
            "details": [
              {
                "details": null,
                "name": "401",
                "description": "Unauthorized",
                "action": "added",
                "breaking": false,
                "message": "Added response: **401 Unauthorized**\n\u003e Unauthorized\n"
              },
              {
                "details": null,
                "name": "403",
                "description": "Forbidden",
                "action": "added",
                "breaking": false,
                "message": "Added response: **403 Forbidden**\n\u003e Forbidden\n"
              },
              {
                "details": null,
                "name": "400",
                "description": "Bad Request",
                "action": "added",
                "breaking": false,
                "message": "Added response: **400 Bad Request**\n\u003e Bad Request\n"
              },
              {
                "details": null,
                "name": "404",
                "description": "Not Found",
                "action": "added",
                "breaking": false,
                "message": "Added response: **404 Not Found**\n\u003e Not Found\n"
              },
              {
                "details": null,
                "name": "429",
                "description": "Too Many Requests",
                "action": "added",
                "breaking": false,
                "message": "Added response: **429 Too Many Requests**\n\u003e Too Many Requests\n"
              },
              {
                "details": null,
                "name": "500",
                "description": "Internal Server Error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **500 Internal Server Error**\n\u003e Internal Server Error\n"
              },
              {
                "details": null,
                "name": "default",
                "description": "unexpected error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **default **\n\u003e unexpected error\n"
              },
              {
                "details": [
                  {
                    "description": "",
                    "name": "Date",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Date`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "Link",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Link`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "If-None-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-None-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "If-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "TRACKINGID",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `TRACKINGID`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "ETag",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `ETag`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "application/json;charset=UTF-8",
                    "action": "modified",
                    "breaking": true,
                    "message": "\n* Modified content type: `application/json;charset=UTF-8`\n",
                    "properties": null
                  }
                ],
                "name": "200",
                "description": "OK",
                "action": "modified",
                "breaking": true,
                "message": "Modified response: **200 OK**\n\u003e OK\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Modified content type: `application/json;charset=UTF-8`\n"
              }
            ]
          },
          "security": {
            "breaking": false,
            "message": "###### Security:\n\nAdded authentication: `BearerAuth`\n",
            "details": [
              {
                "breaking": false,
                "name": "BearerAuth",
                "action": "added",
                "message": "Added authentication: `BearerAuth`\n"
              }
            ]
          }
        },
        {
          "old": {
            "description": "\u003csanity\u003e",
            "operationId": "Get an item",
            "parameters": [
              {
                "in": "path",
                "name": "id",
                "required": true,
                "type": "string",
                "x-example": "a0a4f044-b040-410d-8ead-4de0446aec7e"
              }
            ],
            "produces": [
              "application/json; charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "",
                "schema": {
                  "$ref": "#/definitions/Getanitemresponse"
                }
              }
            }
          },
          "new": {
            "description": "get",
            "operationId": "Get-an-item",
            "parameters": [
              {
                "description": "catalogue id",
                "in": "path",
                "maxLength": 255,
                "minLength": 1,
                "name": "id",
                "pattern": "[^/]*",
                "required": true,
                "type": "string"
              }
            ],
            "produces": [
              "application/json; charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "OK",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "Link": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Getanitemresponse"
                }
              },
              "400": {
                "description": "Bad Request",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "401": {
                "description": "Unauthorized",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "403": {
                "description": "Forbidden",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "404": {
                "description": "Not Found",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "429": {
                "description": "Too Many Requests",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Internal Server Error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            },
            "security": [
              {
                "BearerAuth": []
              }
            ],
            "tags": [
              "Sample"
            ]
          },
          "path": "/catalogue/{id}",
          "method": "GET",
          "summary": "",
          "description": "get",
          "breaking": true,
          "message": "###### Parameters:\n\nModified: `id` in `path`\n\u003e catalogue id\n\n###### Response:\n\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Modified content type: `application/json; charset=UTF-8`\n    * Added property `tags` (array)\n\n    * Added property `imageUrls` (array)\n\n    * Deleted property `imageUrl` (array)\n\n    * Deleted property `tag` (array)\n\n    * Modified property `id` (string)\n\n    * Modified property `name` (string)\n\n    * Modified property `description` (string)\n\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n",
          "parameters": {
            "breaking": true,
            "message": "###### Parameters:\n\nModified: `id` in `path`\n\u003e catalogue id\n\n",
            "details": [
              {
                "name": "id",
                "in": "path",
                "description": "catalogue id",
                "deprecated": false,
                "breaking": true,
                "action": "modified",
                "message": "Modified: `id` in `path`\n\u003e catalogue id\n\n"
              }
            ]
          },
          "requestBody": null,
          "responses": {
            "breaking": true,
            "message": "###### Response:\n\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Modified content type: `application/json; charset=UTF-8`\n    * Added property `tags` (array)\n\n    * Added property `imageUrls` (array)\n\n    * Deleted property `imageUrl` (array)\n\n    * Deleted property `tag` (array)\n\n    * Modified property `id` (string)\n\n    * Modified property `name` (string)\n\n    * Modified property `description` (string)\n\n",
            "details": [
              {
                "details": null,
                "name": "default",
                "description": "unexpected error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **default **\n\u003e unexpected error\n"
              },
              {
                "details": null,
                "name": "401",
                "description": "Unauthorized",
                "action": "added",
                "breaking": false,
                "message": "Added response: **401 Unauthorized**\n\u003e Unauthorized\n"
              },
              {
                "details": null,
                "name": "403",
                "description": "Forbidden",
                "action": "added",
                "breaking": false,
                "message": "Added response: **403 Forbidden**\n\u003e Forbidden\n"
              },
              {
                "details": null,
                "name": "400",
                "description": "Bad Request",
                "action": "added",
                "breaking": false,
                "message": "Added response: **400 Bad Request**\n\u003e Bad Request\n"
              },
              {
                "details": null,
                "name": "404",
                "description": "Not Found",
                "action": "added",
                "breaking": false,
                "message": "Added response: **404 Not Found**\n\u003e Not Found\n"
              },
              {
                "details": null,
                "name": "429",
                "description": "Too Many Requests",
                "action": "added",
                "breaking": false,
                "message": "Added response: **429 Too Many Requests**\n\u003e Too Many Requests\n"
              },
              {
                "details": null,
                "name": "500",
                "description": "Internal Server Error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **500 Internal Server Error**\n\u003e Internal Server Error\n"
              },
              {
                "details": [
                  {
                    "description": "",
                    "name": "If-None-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-None-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "If-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "TRACKINGID",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `TRACKINGID`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "ETag",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `ETag`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "Date",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Date`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "Link",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Link`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "application/json; charset=UTF-8",
                    "action": "modified",
                    "breaking": true,
                    "message": "\n* Modified content type: `application/json; charset=UTF-8`\n    * Added property `tags` (array)\n\n    * Added property `imageUrls` (array)\n\n    * Deleted property `imageUrl` (array)\n\n    * Deleted property `tag` (array)\n\n    * Modified property `id` (string)\n\n    * Modified property `name` (string)\n\n    * Modified property `description` (string)\n\n",
                    "properties": [
                      {
                        "name": "tags",
                        "type": "array",
                        "description": "",
                        "action": "added",
                        "breaking": false,
                        "message": "    * Added property `tags` (array)\n\n",
                        "properties": null
                      },
                      {
                        "name": "imageUrls",
                        "type": "array",
                        "description": "",
                        "action": "added",
                        "breaking": false,
                        "message": "    * Added property `imageUrls` (array)\n\n",
                        "properties": null
                      },
                      {
                        "name": "imageUrl",
                        "type": "array",
                        "description": "",
                        "action": "deleted",
                        "breaking": false,
                        "message": "    * Deleted property `imageUrl` (array)\n\n",
                        "properties": null
                      },
                      {
                        "name": "tag",
                        "type": "array",
                        "description": "",
                        "action": "deleted",
                        "breaking": false,
                        "message": "    * Deleted property `tag` (array)\n\n",
                        "properties": null
                      },
                      {
                        "name": "id",
                        "type": "string",
                        "description": "",
                        "action": "modified",
                        "breaking": false,
                        "message": "    * Modified property `id` (string)\n\n",
                        "properties": null
                      },
                      {
                        "name": "name",
                        "type": "string",
                        "description": "",
                        "action": "modified",
                        "breaking": false,
                        "message": "    * Modified property `name` (string)\n\n",
                        "properties": null
                      },
                      {
                        "name": "description",
                        "type": "string",
                        "description": "",
                        "action": "modified",
                        "breaking": false,
                        "message": "    * Modified property `description` (string)\n\n",
                        "properties": null
                      }
                    ]
                  }
                ],
                "name": "200",
                "description": "OK",
                "action": "modified",
                "breaking": true,
                "message": "Modified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Modified content type: `application/json; charset=UTF-8`\n    * Added property `tags` (array)\n\n    * Added property `imageUrls` (array)\n\n    * Deleted property `imageUrl` (array)\n\n    * Deleted property `tag` (array)\n\n    * Modified property `id` (string)\n\n    * Modified property `name` (string)\n\n    * Modified property `description` (string)\n\n"
              }
            ]
          },
          "security": {
            "breaking": false,
            "message": "###### Security:\n\nAdded authentication: `BearerAuth`\n",
            "details": [
              {
                "breaking": false,
                "name": "BearerAuth",
                "action": "added",
                "message": "Added authentication: `BearerAuth`\n"
              }
            ]
          }
        },
        {
          "old": {
            "operationId": "Get size",
            "produces": [
              "application/json;charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "",
                "schema": {
                  "$ref": "#/definitions/Getsizeresponse"
                }
              }
            }
          },
          "new": {
            "deprecated": true,
            "description": "Get size",
            "operationId": "Get-size",
            "parameters": [
              {
                "description": "query",
                "format": "double",
                "in": "query",
                "maximum": 255,
                "minimum": 1,
                "name": "max",
                "type": "number"
              },
              {
                "description": "query",
                "format": "double",
                "in": "query",
                "maximum": 255,
                "minimum": 1,
                "name": "offset",
                "type": "number"
              },
              {
                "description": "query",
                "in": "query",
                "maxLength": 255,
                "minLength": 1,
                "name": "sort",
                "pattern": "[^/]*",
                "type": "string"
              },
              {
                "description": "query",
                "in": "query",
                "maxLength": 255,
                "minLength": 1,
                "name": "order",
                "pattern": "[^/]*",
                "type": "string"
              }
            ],
            "produces": [
              "application/json;charset=UTF-8"
            ],
            "responses": {
              "200": {
                "description": "OK",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "Link": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Getsizeresponse"
                }
              },
              "400": {
                "description": "Bad Request",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "401": {
                "description": "Unauthorized",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "403": {
                "description": "Forbidden",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "404": {
                "description": "Not Found",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "429": {
                "description": "Too Many Requests",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "500": {
                "description": "Internal Server Error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              },
              "default": {
                "description": "unexpected error",
                "headers": {
                  "Date": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "ETag": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "If-None-Match": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  },
                  "TRACKINGID": {
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "[^/]*",
                    "type": "string"
                  }
                },
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            },
            "security": [
              {
                "BearerAuth": []
              }
            ],
            "tags": [
              "Sample"
            ]
          },
          "path": "/catalogue/size",
          "method": "GET",
          "summary": "",
          "description": "Get size",
          "breaking": false,
          "message": "###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n###### Response:\n\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n",
          "parameters": {
            "breaking": false,
            "message": "###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n",
            "details": [
              {
                "name": "max",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `max` in `query`\n\u003e query\n\n"
              },
              {
                "name": "offset",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `offset` in `query`\n\u003e query\n\n"
              },
              {
                "name": "sort",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `sort` in `query`\n\u003e query\n\n"
              },
              {
                "name": "order",
                "in": "query",
                "description": "query",
                "deprecated": false,
                "breaking": false,
                "action": "added",
                "message": "Added: `order` in `query`\n\u003e query\n\n"
              }
            ]
          },
          "requestBody": null,
          "responses": {
            "breaking": false,
            "message": "###### Response:\n\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n",
            "details": [
              {
                "details": null,
                "name": "500",
                "description": "Internal Server Error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **500 Internal Server Error**\n\u003e Internal Server Error\n"
              },
              {
                "details": null,
                "name": "default",
                "description": "unexpected error",
                "action": "added",
                "breaking": false,
                "message": "Added response: **default **\n\u003e unexpected error\n"
              },
              {
                "details": null,
                "name": "401",
                "description": "Unauthorized",
                "action": "added",
                "breaking": false,
                "message": "Added response: **401 Unauthorized**\n\u003e Unauthorized\n"
              },
              {
                "details": null,
                "name": "403",
                "description": "Forbidden",
                "action": "added",
                "breaking": false,
                "message": "Added response: **403 Forbidden**\n\u003e Forbidden\n"
              },
              {
                "details": null,
                "name": "400",
                "description": "Bad Request",
                "action": "added",
                "breaking": false,
                "message": "Added response: **400 Bad Request**\n\u003e Bad Request\n"
              },
              {
                "details": null,
                "name": "404",
                "description": "Not Found",
                "action": "added",
                "breaking": false,
                "message": "Added response: **404 Not Found**\n\u003e Not Found\n"
              },
              {
                "details": null,
                "name": "429",
                "description": "Too Many Requests",
                "action": "added",
                "breaking": false,
                "message": "Added response: **429 Too Many Requests**\n\u003e Too Many Requests\n"
              },
              {
                "details": [
                  {
                    "description": "",
                    "name": "If-None-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-None-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "If-Match",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `If-Match`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "TRACKINGID",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `TRACKINGID`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "ETag",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `ETag`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "Date",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Date`\n",
                    "properties": null
                  },
                  {
                    "description": "",
                    "name": "Link",
                    "action": "added",
                    "breaking": false,
                    "message": "\n* Added header: `Link`\n",
                    "properties": null
                  }
                ],
                "name": "200",
                "description": "OK",
                "action": "modified",
                "breaking": false,
                "message": "Modified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n"
              }
            ]
          },
          "security": {
            "breaking": false,
            "message": "###### Security:\n\nAdded authentication: `BearerAuth`\n",
            "details": [
              {
                "breaking": false,
                "name": "BearerAuth",
                "action": "added",
                "message": "Added authentication: `BearerAuth`\n"
              }
            ]
          }
        }
      ],
      "breaking": true,
      "message": "#### What's New\n\n##### `GET` /tag\n\n\n#### What's Deleted\n\n##### `GET` /tags\n\n\n#### What's Deprecated\n\n##### `GET` /catalogue/size\n\n\n#### What's Modified\n\n##### `GET` /catalogue\n\n\n###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n###### Response:\n\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Modified content type: `application/json;charset=UTF-8`\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n##### `GET` /catalogue/{id}\n\n\n###### Parameters:\n\nModified: `id` in `path`\n\u003e catalogue id\n\n###### Response:\n\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n\n* Modified content type: `application/json; charset=UTF-8`\n    * Added property `tags` (array)\n\n    * Added property `imageUrls` (array)\n\n    * Deleted property `imageUrl` (array)\n\n    * Deleted property `tag` (array)\n\n    * Modified property `id` (string)\n\n    * Modified property `name` (string)\n\n    * Modified property `description` (string)\n\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n##### `GET` /catalogue/size\n\n\n###### Parameters:\n\nAdded: `max` in `query`\n\u003e query\n\nAdded: `offset` in `query`\n\u003e query\n\nAdded: `sort` in `query`\n\u003e query\n\nAdded: `order` in `query`\n\u003e query\n\n###### Response:\n\nAdded response: **500 Internal Server Error**\n\u003e Internal Server Error\nAdded response: **default **\n\u003e unexpected error\nAdded response: **401 Unauthorized**\n\u003e Unauthorized\nAdded response: **403 Forbidden**\n\u003e Forbidden\nAdded response: **400 Bad Request**\n\u003e Bad Request\nAdded response: **404 Not Found**\n\u003e Not Found\nAdded response: **429 Too Many Requests**\n\u003e Too Many Requests\nModified response: **200 OK**\n\u003e OK\n\n* Added header: `If-None-Match`\n\n* Added header: `If-Match`\n\n* Added header: `TRACKINGID`\n\n* Added header: `ETag`\n\n* Added header: `Date`\n\n* Added header: `Link`\n###### Security:\n\nAdded authentication: `BearerAuth`\n\n"
    }
  },
  "service_id": "7c79bbbf-e6d0-11ec-bb12-eaf20b4abd44",
  "status": "Diffed",
  "created_at": "2022-06-27T07:45:59.294Z",
  "updated_at": "2022-06-27T07:46:04.18Z"
}